version: "3.9"

x-environment: &oncall-environment
  # Oncall setup
  BASE_URL: http://oncall-engine:8080
  SECRET_KEY: DKhs7hjdsgAKHFAkshcksgviwocHSJgsiu
  DJANGO_SETTINGS_MODULE: settings.hobby

  # Database connnection
  DATABASE_TYPE: postgresql
  DATABASE_NAME: oncall
  DATABASE_USER: oncall
  DATABASE_PASSWORD: oncall
  DATABASE_HOST: postgres
  DATABASE_PORT: 5432

  # Enable prometheus metrics
  FEATURE_PROMETHEUS_EXPORTER_ENABLED: "True"

  # Celery
  CELERY_WORKER_QUEUE: "default,critical,long,slack,telegram,webhook,retry,celery,grafana"
  CELERY_WORKER_CONCURRENCY: "1"
  CELERY_WORKER_MAX_TASKS_PER_CHILD: "100"
  CELERY_WORKER_SHUTDOWN_INTERVAL: "65m"
  CELERY_WORKER_BEAT_ENABLED: "True"

  # Redis
  BROKER_TYPE: redis
  REDIS_URI: redis://redis:6379/0

  # Grafana
  GRAFANA_API_URL: http://grafana:3000

services:
  oncall-engine:
    image: grafana/oncall
    restart: always
    command: sh -c "sh oncall-engine-entrypoint.sh"
    environment: *oncall-environment
    volumes:
      - $PWD/oncall-engine-entrypoint.sh:/etc/app/oncall-engine-entrypoint.sh
      - oncall_data:/var/lib/oncall
    hostname: oncall-engine
    labels:
      - metrics.scrape=true
      - metrics.path=/metrics/
      - metrics.port=8080

  oncall-celery:
    image: grafana/oncall
    restart: always
    command: sh -c "sh oncall-celery-entrypoint.sh"
    environment: *oncall-environment
    volumes:
      - $PWD/oncall-celery-entrypoint.sh:/etc/app/oncall-celery-entrypoint.sh
      - oncall_data:/var/lib/oncall
    hostname: oncall-celery

  redis:
    image: redis:latest
    hostname: redis
    restart: always
    expose:
      - 6379
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 5s
      interval: 5s
      retries: 10

volumes:
  oncall_data:
  redis_data:
